option solver '..\..\Ampl\cplex.exe';

option presolve_eps 0.00001;

### Setting controls

option display_precision 8;

### Reading model

printf '\n==============================\n';
printf 'Reading model ...\n\n';

model 'dap_ddap.mod';

### Reading data

printf '\n==============================\n';
printf 'Reading data ...\n\n';

data 'net12_final_ddap.dat';

#display Nodes;

#display Links, link_nodeA, link_nodeZ;

#display Demands, demand_maxPath, demand_volume;

#display Demand_pathLinks;

### Solving problem

printf '\n==============================\n';
printf 'Solving the problem ...\n\n';

solve ddap;

param linkCapacity{l in Links};
for {l in Links} {
	let linkCapacity[l] := number_of_linksModules[l] * module_capacity
	}

param linkLoad{l in Links};
for {l in Links} {
	let linkLoad[l] := sum { d in Demands, dp in 1..demand_maxPath[ d ]: sum{ k in Demand_pathLinks[ d, dp ]: k = l } 1 > 0 } demandPath_flow[ d, dp ];
	}

display linkCapacity;
display linkLoad;
display minLinksCost;

printf '\n==============================\n';
printf 'Solving completed.\n\n';